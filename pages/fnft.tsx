import * as utils from "lib/minting-fnft-utils";
import { useCallback, useMemo, useState } from "react";
import { useCardano, utility } from "use-cardano";

import { Inter } from "@next/font/google";
import {
  applyParamsToScript,
  Data,
  Lucid,
  MintingPolicy,
  PolicyId,
  TxHash,
  Unit,
  utf8ToHex,
  Constr,
} from "lucid-cardano";

const inter = Inter({ subsets: ["latin"] });

export default function Mint() {
  const { lucid, account, showToaster, hideToaster } = useCardano();

  const [name, setName] = useState("");
  const [fnftAmount, setFnftAmount] = useState(0);

  const mintFNFT = useCallback(async () => {
    try {
      if (!lucid || !account?.address || !name) return;

      let fnftJson = {
        type: "PlutusScriptV2",
        description: "",
        cborHex:
          "",
      };

      const fnftAddress = await lucid.utils.validatorToAddress({
        type: "PlutusV2",
        script: fnftJson.cborHex,
      });

      const fnftHash = await lucid.utils.validatorToScriptHash({
        type: "PlutusV2",
        script: fnftJson.cborHex,
      });

      // Type definition could be auto generated from on-chain script
      const Params = Data.Tuple([Data.String]);
      type Params = Data.Static<typeof Params>;

      const utxos = await lucid.utxosAt(account.address);
      console.log(utxos);
      const utxo = utxos[1];
      const mintingPolicy: MintingPolicy = {
        type: "PlutusV2",
        script: applyParamsToScript<Params>(
          "59132159131e0100003233223232323232332232323232323232323232323322323232323232323232323232323232323232323232323232323232323232323222323232232325335323232323232323232323232533500b1330413303f491345b506c75747573204572726f725d3a204275726e656420616d6f756e74206672616374696f6e73206e6f74206e656761746976650032333573466e2000520000440435001330413303f4912e5b506c75747573204572726f725d3a204469646e2774206275726e206f6e652076616c696469747920746f6b656e003303e33031025500248004cc104cc0fd24012a5b506c75747573204572726f725d3a204672616374696f6e20746f6b656e73206e6f74206275726e6564003303e32323335002220013501735002220020015002321233001002223370200400266a0804466e0000800520003235001222222004304550033303f49014a5b506c75747573204572726f725d3a204469646e2774206275726e2065786163746c79206672616374696f6e20746f6b656e7320616e64206f6e652076616c696469747920746f6b656e003303e335502c303412001500248010884c8c8c94cd54cd4ccd5cd19b8950014800011c12041204cd5ce249355b506c75747573204572726f725d3a204d696e74656420616d6d6f756e74206672616374696f6e73206e6f7420706f7369746976650004715335533535500e222222222222333553045120013233504b2233350032200200200135027001335051225335002105610010532325335333573466e3cd400488008d4044880081581544ccd5cd19b87350012200135011220010560551055350012200200c10481335738921345b506c75747573204572726f725d3a205554784f207573656420666f7220746f6b656e206e616d652069736e2774207370656e740004715335533553353302b500e533533355303912001503825335533533040350012222004330413042012504f1533533355303a120015039253353500122253353304700350111330470025007104c1350510011505030343500122220032104a104810481350500011504f500d2100113263204d3357389212f5b506c75747573204572726f725d3a2063616e6e6f742066696e642074686520617373657420696e206f75747075740004d2135001222222533553353232350022235003225335333573466e3c0100081541504cc13c00c0044150cd540fd40514028cd540f8018014413c4cd5ce24812a5b506c75747573204572726f725d3a20646174756d206672616374696f6e414320696e636f72726563740004e153355335333573466e1c011402013c138413c4cd5ce2492a5b506c75747573204572726f725d3a20656d69747465644672616374696f6e7320696e636f72726563740004e15335333573466e1c005402013c138413c4cd5ce2492b5b506c75747573204572726f725d3a2072656d61696e65644672616374696f6e7320696e636f72726563740004e104e104e13263204d33573892012e5b506c75747573204572726f725d3a206f757470757420646174756d206d757374206e6f7420626520656d7074790004d1048133573892012e5b506c75747573204572726f725d3a2053637269707420646174756d20696e636f72726563746c79206275696c7400047153355335333573466e1ccd540c4c0e448005402d2004048047104813357389214a5b506c75747573204572726f725d3a204469646e2774206d696e742065786163746c79206672616374696f6e20746f6b656e7320616e64206f6e652076616c696469747920746f6b656e00047153355335333573466e1ccc0d80a9402d2002048047104813357389212a5b506c75747573204572726f725d3a204469646e2774206d696e742076616c696469747920746f6b656e0004715335533533355303912001503825335533533040350012222004330413042012504f1533533355303a1200150392533535001222533533047003501113304700202f104c1350510011505030343500122220032104a104810481350500011504f500d2104913263204d3357389212f5b506c75747573204572726f725d3a2063616e6e6f742066696e642074686520617373657420696e206f75747075740004d1048133573892012a5b506c75747573204572726f725d3a204469646e2774206c6f636b2076616c696469747920746f6b656e00047104710471047104710471330355001500a1372466e2cd400488004d400488008cc0b40080044cc0c0cd5410c8d4004888888014c111400940044cc0ad4008c8d4004888888888888021400c4cd54104c08d4008cd541048d4004880054cd4c8c8ccd54c0cc4800540c88d400488d400488894cd4ccd54c0e84800540e48d40048894cd4ccd5cd19b8f00300d04d04c15335333573466e1c005200204d04c1350540041505315053303400321350510081504f001323500122222222222200c500350012100113504349011f5b506c75747573204572726f725d3a204e6f7420666f756e6420696e707574001302600613500522002133027500135500322222222222200813023003135500122222222222200a135001220023333573466e1cd55cea80224000466442466002006004646464646464646464646464646666ae68cdc39aab9d500c480008cccccccccccc88888888888848cccccccccccc00403403002c02802402001c01801401000c008cd406c070d5d0a80619a80d80e1aba1500b33501b01d35742a014666aa03eeb94078d5d0a804999aa80fbae501e35742a01066a0360486ae85401cccd5407c095d69aba150063232323333573466e1cd55cea801240004664424660020060046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40bdd69aba150023030357426ae8940088c98c8154cd5ce01882a82989aab9e5001137540026ae854008c8c8c8cccd5cd19b8735573aa004900011991091980080180119a817bad35742a00460606ae84d5d1280111931902a99ab9c031055053135573ca00226ea8004d5d09aba2500223263205133573805a0a209e26aae7940044dd50009aba1500533501b75c6ae854010ccd5407c0848004d5d0a801999aa80fbae200135742a00460466ae84d5d1280111931902699ab9c02904d04b135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d55cf280089baa00135742a00860266ae84d5d1280211931901f99ab9c01b03f03d3333573466e1d40152002212200223333573466e1d401920002332212233001004003375c6ae854020dd69aba135744a010464c6407e66ae7006c0fc0f40f0dd7004081e09a81d2490350543500135573ca00226ea80044d55cea80109aab9e500113754002246a002440022464460046eb0004c8004d540d888cccd55cf80092812119a81198021aba100230033574400406a464646666ae68cdc39aab9d5002480008cc8848cc00400c008c028d5d0a80118029aba135744a004464c6406a66ae700440d40cc4d55cf280089baa0012323232323333573466e1cd55cea8022400046666444424666600200a0080060046464646666ae68cdc39aab9d5002480008cc0b4c04cd5d0a80119a8068091aba135744a004464c6407466ae700580e80e04d55cf280089baa00135742a008666aa010eb9401cd5d0a8019919191999ab9a3370ea0029002119091118010021aba135573ca00646666ae68cdc3a80124004464244460020086eb8d5d09aab9e500423333573466e1d400d20002122200323263203c33573803007807407207026aae7540044dd50009aba1500233500975c6ae84d5d1280111931901b19ab9c012036034135744a00226ae8940044d55cf280089baa0011335500175ceb44488c88c008dd5800990009aa81991191999aab9f002250222335021335501e300635573aa004600a6aae794008c010d5d100181989aba100112232323333573466e1d400520002350343005357426aae79400c8cccd5cd19b87500248008940d08c98c80cccd5ce00781981881809aab9d500113754002464646666ae68cdc3a800a400c46424444600800a600e6ae84d55cf280191999ab9a3370ea004900211909111180100298049aba135573ca00846666ae68cdc3a801a400446424444600200a600e6ae84d55cf280291999ab9a3370ea00890001190911118018029bae357426aae7940188c98c80cccd5ce00781981881801781709aab9d500113754002464646666ae68cdc39aab9d5002480008cc048c014d5d0a8011bad357426ae8940088c98c80bccd5ce00581781689aab9e5001137540024646666ae68cdc39aab9d5001480008dd71aba135573ca004464c6405a66ae700240b40ac4dd5000919191919191999ab9a3370ea002900610911111100191999ab9a3370ea004900510911111100211999ab9a3370ea00690041199109111111198008048041bae35742a00a6eb4d5d09aba2500523333573466e1d40112006233221222222233002009008375c6ae85401cdd71aba135744a00e46666ae68cdc3a802a400846644244444446600c01201060186ae854024dd71aba135744a01246666ae68cdc3a8032400446424444444600e010601a6ae84d55cf280591999ab9a3370ea00e900011909111111180280418071aba135573ca018464c6406c66ae700480d80d00cc0c80c40c00bc0b84d55cea80209aab9e5003135573ca00426aae7940044dd50009191919191999ab9a3370ea002900111999110911998008028020019bad35742a0086eb4d5d0a8019bad357426ae89400c8cccd5cd19b875002480008c8488c00800cc020d5d09aab9e500623263202f33573801605e05a05826aae75400c4d5d1280089aab9e500113754002464646666ae68cdc3a800a40044603e6eb8d5d09aab9e500323333573466e1d400920002321223002003375c6ae84d55cf280211931901619ab9c00802c02a029135573aa00226ea8004488c8c8cccd5cd19b87500148010848880048cccd5cd19b875002480088c84888c00c010c018d5d09aab9e500423333573466e1d400d20002122200223263202d33573801205a05605405226aae7540044dd50009191999ab9a3370ea0029001101191999ab9a3370ea0049000101191931901499ab9c005029027026135573a6ea8005241035054310048810d464e46545f56414c4944495459002235001222253335002150292130080012321533535008222222222222300d00221300a0011502b3200135502c2253350011502c22135002225335333573466e3c00801c0a80a44d40c40044c01800c8c8c8c8c8c8c8c8ccccccd5d200411999ab9a3370e6aae7540212000233335573ea0104a05a46666aae7d4020940b88cccd55cfa8041281791999aab9f500825030233335573ea0104a06246666aae7d4020940c88cccd55cf9aba2500925335301335742a01e42a66a60286ae85403c854cd4c050d5d0a80790a99a980b1aba1500f215335301735742a01e42a66a602e6ae85403c84d40e848cccccc00401c01801401000c008540e0540dc540d8540d4540d0540cc940cc0c40c00bc0b80b40b00ac940b00a4940ac940ac940ac940ac0a44d5d1280089aba25001135744a00226ae8940044d5d1280089aab9e50011375400246666666ae900049408c9408c9408c8d4090dd68011281181091999999aba400125022250222502225022235023375c00404046a002446666a002464c6404466ae712401024c680002220012326320223357389201024c68000222326320223357389201024c68000222212330010030021122333355002323350102233350110030010023500e00133500f22230033002001200122337000029001000a4000446644664002640026aa04444a66a0022006442646a006444a66a666ae68cdc780180601101089980519aa808801000802080218020009802801a80528059198012804800990009aa80e111299a80088011109a8011119803999804001003000801990009aa80d9111299a80088011109a80111299a999ab9a3370e002900000d80d0999804003803001899980400399a806891998008040018010030019119a999aa980289000a80211a80091299a999ab9a3371e00400a02e02c26a03c0062a03a00246a00244002900008910919800801801099a80311299a801108018800a80b190009aa80b9108911299a80089a804001910999a8058029802001199aa980389000802802000889100109109119800802001891a80091000891a800910010910919800801801111a801111a801911919a802919a8021299a999ab9a3371e0040020240222a00620224022466a00840224a66a666ae68cdc78010008090088a80188088a99a80190a99a8011099a801119a801119a801119a801119807801000900a119a801100a11980780100091100a11119a802100a111299a999ab9a3370e00c00602e02c2a66a666ae68cdc380280100b80b099809002000880b080b08078a99a8009080788079109198008018011091180080191199ab9a3371e00400201000e44666ae68cdc380100080380311299a8008803099ab9c002005122123300100300222533500210011003122002122001112230020012533500121001135002491235b506c75747573204572726f725d3a2043616e206e6f7420706172736520646174756d00123263200333573800200693090008909118010018891000889191800800911980198010010009",
          [fnftHash],
          Params
        ),
      };

      const redeemerMintFNFT = Data.to(
        new Constr(0, [utxo.txHash, BigInt(utxo.outputIndex)])
      );

      console.log(redeemerMintFNFT);

      const fromHex = (hex: string) => Buffer.from(hex, "hex");
      const toHex = (bytes: number[]) => Buffer.from(bytes).toString("hex");
      const { createHash } = require("crypto");
      const valueToHash = [utxo.outputIndex, ...fromHex(utxo.txHash)];
      const hash = await createHash("sha256")
        .update(toHex(valueToHash), "hex")
        .digest("hex");
      const tokenFNFTName = hash;

      const nftTx = await utils.mintFNFT({
        lucid,
        address: fnftAddress,
        name,
        mintingPolicy,
        redeemerMintFNFT,
        tokenFNFTName,
        utxos,
      });

      showToaster("Minted NFT", `Transaction: ${nftTx}`);
    } catch (e) {
      if (utility.isError(e)) showToaster("Could not mint NFT", e.message);
      else if (typeof e === "string") showToaster("Could not mint NFT", e);
    }
  }, [lucid, account?.address, showToaster, name]);

  const burnFNFT = useCallback(async () => {
    try {
      if (!lucid || !account?.address || !name) return;

      // const nftTx = await utils.burnNFT({
      //   lucid,
      //   address: account?.address,
      //   name,
      // });

      // showToaster("Burned NFT", `Transaction: ${nftTx}`);
    } catch (e) {
      if (utility.isError(e)) showToaster("Could not burn NFT", e.message);
      else if (typeof e === "string") showToaster("Could not burn NFT", e);
    }
  }, [lucid, account?.address, showToaster, name]);

  const canMint = useMemo(
    () => lucid && account?.address && name,
    [lucid, account?.address, name]
  );

  return (
    <div className="text-center max-w-4xl m-auto text-gray-900 dark:text-gray-100">
      <h1
        style={inter.style}
        className="mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl lg:text-6xl"
      >
        Fragment a NFT token
      </h1>

      <div style={inter.style} className="my-4 text-center">
        Using Lucid, we can mint a token on the Cardano blockchain.
      </div>

      <div className="text-left my-8">
        <div className="my-4">
          <label className="flex flex-col w-100">
            <span className="text-sm lowercase mb-1">NFT name</span>

            <input
              className="rounded py-1 px-2 text-gray-800 border"
              name="message"
              placeholder="My NFT name"
              value={name || ""}
              onChange={(e) => setName(e.target.value?.toString())}
            />
          </label>
        </div>

        <div className="my-4">
          <label className="flex flex-col w-40">
            <span className="text-sm lowercase mb-1">Amount of FNFT</span>

            <input
              className="rounded py-1 px-2 text-gray-800 border"
              type="number"
              min="0"
              step="1000"
              name="amount"
              value={fnftAmount}
              onChange={(e) => setFnftAmount(parseInt(e.target.value))}
            />
          </label>
        </div>

        <div className="my-4">
          <button
            disabled={!canMint}
            className="border hover:bg-blue-400 text-white my-4 w-40 py-2 cursor-pointer transition-colors disabled:cursor-not-allowed disabled:text-gray-200 rounded bg-blue-300 disabled:bg-blue-200 dark:bg-white dark:text-gray-800 dark:disabled:bg-white dark:hover:bg-white font-bold uppercase"
            onClick={() => {
              hideToaster();
              mintFNFT();
            }}
          >
            mint FNFT
          </button>

          <button
            disabled={!canMint}
            className="border ml-4 hover:bg-blue-400 text-white w-40 py-2 cursor-pointer transition-colors disabled:cursor-not-allowed disabled:text-gray-200 rounded bg-blue-300 disabled:bg-blue-200 dark:bg-white dark:text-gray-800 dark:disabled:bg-white dark:hover:bg-white font-bold uppercase"
            onClick={() => {
              hideToaster();
              burnFNFT();
            }}
          >
            burn
          </button>
        </div>
      </div>
    </div>
  );
}
